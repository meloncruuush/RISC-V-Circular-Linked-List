DEL:
    add t1 s1 zero                        # t1 = Testa
    beq t1 zero check_next_instruction    # Se testa è vuota, prossima istruzione
    add t4 t1 zero                        # precedente
    DEL_loop: 
        lb t2 0(t1)                       # t2 = nodo.valore
        beq a2 t2 delete_element          # if t2 == a2 elimina nodo
        add t4 t1 zero                    # t4 = nodo precedente
        lw t1 1(t1)                       # t1 = prossimo nodo
        beq t1 s1 check_next_instruction  # se nodo = testa, il cerchio è concluso
        j DEL_loop
    
    delete_element:
        beq t1 s1 delete_head            # controllo se è la testa
        beq t1 s2 delete_tail            # controllo se è l'ultimo elemento
                
        lw t3 1(t1)        # t3 = puntatore
        sw t3 1(t4)        # salvo il pahead nel nodo precedente
        sb zero 0(t1)      # azzero data nel nodo
        sw zero 1(t1)      # azzero puntatore nel nodo
                           # precedente non viene aggiornato, poichè rimane lo stesso
        lw t1 1(t4)    
        j DEL_loop
    
    delete_head:
        lw t3 0(t1)                    # t3 = puntatore della testa
        beq t3 t1 del_only_element     # Se punta a se stesso, c'è solo la testa
        
        sb zero 0(t1)                  # Imposto il valore a 0
        sw zero 1(t1)                  # Imposto il puntatore a 0
        add s1 t3 zero                 # La testa globale ora punta a quello che era il secondo elemento
        add t1 t3 zero                 # Imposto t1 al prossimo valore per continuare il ciclo
        j DEL_loop 

    del_only_element:
        sb zero 0(t1)                  # Valore a 0        
        sw zero 1(t1)                  # Puntatore a 0
        add s1 zero zero               # Testa globale a 0
        j check_next_instruction
    
    delete_tail:
        sw s1 1(t4)        # precedente ora punta a testa
        sb zero 0(t1)      # azzero data nel nodo
        sw zero 1(t1)      # azzero puntatore nel nodo
        j check_next_instruction